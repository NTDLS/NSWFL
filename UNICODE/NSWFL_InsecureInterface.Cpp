///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  Copyright © NetworkDLS 2023, All rights reserved
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF 
// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO 
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A 
// PARTICULAR PURPOSE.
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef _NSWFL_INSECUREINTERFACE_CPP_
#define _NSWFL_INSECUREINTERFACE_CPP_
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "NSWFL.H"

#ifdef _USE_GLOBAL_MEMPOOL
extern NSWFL::Memory::MemoryPool* pMem; //pMem must be defined and initialized elsewhere.
#endif

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace NSWFL {
	namespace InsecureInterface {
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifdef NSWFL_USE_ALT_SECURE_PROCS

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		bool fopen_s_Ex(FILE** Target, const char* sFile, const char* Mode)
		{
			return((*Target = fopen(sFile, Mode)) == NULL);
		}

		short _fcvt_s(char* buffer, size_t sizeInBytes, double value, int count, int* dec, int* sign)
		{
			char* sCVT = _fcvt(value, count, dec, sign);
			if (sCVT != NULL)
			{
				strcpy(buffer, sCVT);
				return true;
			}
			return false;
		}


#endif

		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	} //namespace::InsecureInterface
} //namespace::NSWFL
#endif
